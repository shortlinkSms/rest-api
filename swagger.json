{
  "swagger" : "2.0",
  "info" : {
    "title" : "Shortlink REST Api",
    "description" : "contact shortlink simply",
    "version" : "1.0.0",
    "contact" : {
      "email" : "support@shortlink.ma"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "app.shortlink.ma",
  "basePath" : "/api/v1",
  "tags" : [ {
    "name" : "admins",
    "description" : "Secured Admin-only calls"
  }, {
    "name" : "developers",
    "description" : "Operations available to regular developers"
  } ],
  "schemes" : [ "https" ],
  "produces" : [ "application/json" ],
  "consumes" : [ "application/json" ],
  "securityDefinitions" : {
    "shortlinkApiKey" : {
      "type" : "apiKey",
      "description" : "the api key, generated from the shortlink plateforme",
      "name" : "x-shortlink-apikey",
      "in" : "header"
    },
    "shortlinkApiSecret" : {
      "type" : "apiKey",
      "description" : "The secret key, generated from the shortlink plateforme",
      "name" : "x-shortlink-apisecret",
      "in" : "header"
    }
  },
  "security" : [ {
    "shortlinkApiKey" : [ ],
    "shortlinkApiSecret" : [ ]
  } ],
  "paths" : {
    "/balances" : {
      "get" : {
        "summary" : "get account balance",
        "operationId" : "getBalance",
        "description" : "Retrieve the account balance of the current user\n",
        "tags" : [ "Balances" ],
        "responses" : {
          "200" : {
            "$ref" : "#/responses/GetBalanceSuccessResponse"
          },
          "400" : {
            "$ref" : "#/responses/Standard400ValidationErrorResponse"
          },
          "500" : {
            "$ref" : "#/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/sms/send/" : {
      "post" : {
        "summary" : "Send sms",
        "operationId" : "SendSms",
        "description" : "Send one or many sms",
        "tags" : [ "SendSms" ],
        "parameters" : [ {
          "name" : "options",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SendSmsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/responses/SendSmsSuccessResponse"
          },
          "400" : {
            "$ref" : "#/responses/Standard400ValidationErrorResponse"
          },
          "500" : {
            "$ref" : "#/responses/Standard500ErrorResponse"
          }
        }
      }
    }
  },
  "definitions" : {
    "GetBalanceSuccess" : {
      "allOf" : [ {
        "$ref" : "#/definitions/SuccessResponse"
      }, {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/definitions/BalanceItem"
          }
        }
      } ]
    },
    "BalanceItem" : {
      "type" : "object",
      "description" : "The entity that represent the account balance",
      "required" : [ "remainingUnits" ],
      "properties" : {
        "remainingUnits" : {
          "type" : "number",
          "description" : "Account remaining units",
          "format" : "double",
          "example" : 20.5
        }
      }
    },
    "SendSmsRequest" : {
      "type" : "object",
      "required" : [ "messages" ],
      "properties" : {
        "bulkId" : {
          "type" : "string",
          "description" : "The ID wich uniquely identifies the request",
          "example" : "3501b52b-09d4-4e86-995b-c345dc7b86d1"
        },
        "defaultRegionCode" : {
          "type" : "string",
          "description" : "the default ISO_3166-1_alpha-2 country code that will be applied if no coutry code is defined in the phone number\n",
          "externalDocs" : {
            "description" : "ISO_3166-1_alpha-2 country codes",
            "url" : "https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"
          },
          "default" : "the api default region code",
          "example" : "FR"
        },
        "notifyUrl" : {
          "type" : "string",
          "description" : "The URL on your callback server on which the Delivery report will be sent",
          "example" : "http://yourSite.com/smsCallback"
        },
        "notifyContentType" : {
          "type" : "string",
          "description" : "Preferred Delivery report content type",
          "example" : "application/json",
          "default" : "application/json",
          "enum" : [ "application/json", "application/xml" ]
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SendMessageEntry"
          }
        }
      }
    },
    "SendMessageEntry" : {
      "type" : "object",
      "description" : "Message Send Options\n",
      "required" : [ "to", "content" ],
      "properties" : {
        "from" : {
          "type" : "string",
          "description" : "Represents a sender ID which can be alphanumeric or numeric. Alphanumeric sender ID length should be between 3 and 11 characters.\nNumeric sender ID length should be between 3 and 14 characters.\n",
          "example" : "SHORTLINK",
          "default" : "The Default Account SENDER ID"
        },
        "to" : {
          "type" : "array",
          "description" : "Recipient informations\n",
          "minItems" : 1,
          "items" : {
            "$ref" : "#/definitions/SendMessageRecipientEntry"
          }
        },
        "content" : {
          "type" : "string",
          "description" : "Text of the message that will be sent, you can inject all recipient data by adding {{porperty}}.\nPossible values are {{firstName}},{{lastName}},{{phone}},{{customerName}},{{email}},{{field1}},{{field2}} \n",
          "example" : "Bonjour {{firstName}} {{LastName}}, le montant de votre commande {{field1}} est de {{fields2}}, SHORTLINK"
        },
        "transliterateMessage" : {
          "type" : "boolean",
          "description" : "replace in sms content non GSM 7 bit characters with  GSM 7 bit ones.\n",
          "example" : false,
          "default" : null
        },
        "messageEncoding" : {
          "type" : "number",
          "description" : "default message encoding, 0 (GSM 7 bit), 1 (UNICODE)  \n",
          "default" : null,
          "example" : 0,
          "enum" : [ 0, 1 ]
        },
        "validityPeriod" : {
          "type" : "number",
          "description" : "The message validity period in minutes. When the period expires, it will not be allowed for the message to be sent\nValidity period longer than 48h is not supported (in this case, it will be automatically set to 48h).\n",
          "minimum" : 60,
          "maximum" : 2880,
          "default" : null,
          "example" : 120
        },
        "sendAt" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the message is to be sent. Used for scheduled SMS (SMS not sent immediately, but at scheduled time).\n",
          "default" : null
        }
      }
    },
    "SendMessageRecipientEntry" : {
      "type" : "object",
      "required" : [ "phone" ],
      "properties" : {
        "messageId" : {
          "type" : "string",
          "description" : "The ID that uniquely identifies the message sent\n",
          "example" : "853fb8f5-1d02-4972-8cc0-cf190105e699"
        },
        "phone" : {
          "type" : "string",
          "description" : "Phone number\n",
          "example" : "33601020304"
        },
        "firstName" : {
          "type" : "string",
          "description" : "Recipient first name\n",
          "example" : "Fran√ßois"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Recipient last name        \n",
          "example" : "Mitterrand"
        },
        "customerName" : {
          "type" : "string",
          "description" : "Recipient company name \n",
          "example" : "SHORTLINK"
        },
        "email" : {
          "type" : "string",
          "description" : "Recipient email address        \n",
          "example" : "contact@shortlink.ma"
        },
        "field1" : {
          "type" : "string",
          "description" : "Field used for adding custom data\n",
          "example" : "12/03/1985"
        },
        "field2" : {
          "type" : "string",
          "description" : "Field used for adding custom data \n",
          "example" : "123,99 EUR"
        }
      }
    },
    "SendSmsSuccess" : {
      "allOf" : [ {
        "$ref" : "#/definitions/SuccessResponse"
      }, {
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "object",
            "properties" : {
              "bulkId" : {
                "type" : "string",
                "description" : "The ID wich uniquely identifies the request\n",
                "example" : "3501b52b-09d4-4e86-995b-c345dc7b86d1"
              },
              "messages" : {
                "type" : "array",
                "description" : "Recipient informations\n",
                "minItems" : 1,
                "items" : {
                  "type" : "object",
                  "required" : [ "messageId", "to", "smsCount", "status" ],
                  "properties" : {
                    "messageId" : {
                      "type" : "string",
                      "description" : "The ID that uniquely identifies the message sent\n",
                      "example" : "853fb8f5-1d02-4972-8cc0-cf190105e699"
                    },
                    "to" : {
                      "type" : "string",
                      "description" : "Phone number in international forma\n",
                      "example" : "33601020304"
                    },
                    "smsCount" : {
                      "type" : "string",
                      "description" : "The number of sent message segments\n",
                      "example" : "2"
                    },
                    "status" : {
                      "type" : "object",
                      "required" : [ "id", "code", "state", "description" ],
                      "properties" : {
                        "state" : {
                          "type" : "string",
                          "description" : "sms State\n",
                          "example" : "pending",
                          "enum" : [ "pending", "fail" ]
                        },
                        "id" : {
                          "type" : "number",
                          "description" : "SMS status ID\n",
                          "example" : 30,
                          "enum" : [ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 30 ]
                        },
                        "code" : {
                          "type" : "string",
                          "description" : "SMS status Code\n",
                          "example" : "ACCEPTED_MSG_SEND_NEXT_ENTRY",
                          "enum" : [ "REJECTED_PHONE_NUMBER_EMPTY", "REJECTED_PHONE_NUMBER_INVALID_NUMBER", "REJECTED_PHONE_NUMBER_ALREADY_EXIST", "REJECTED_PHONE_NUMBER_INVALID_COUNTRY_CODE", "REJECTED_PHONE_NUMBER_NOT_A_NUMBER", "REJECTED_PHONE_NUMBER_TOO_SHORT_AFTER_IDD", "REJECTED_PHONE_NUMBER_TOO_SHORT_NSN", "REJECTED_PHONE_NUMBER_TOO_LONG", "REJECTED_PHONE_NUMBER_NOT_A_MOBILE_NUMBER", "REJECTED_EMAIL_INVALID", "REJECTED_CONTACT_INVALID", "REJECTED_DUPLICATE_MESSAGE_ID", "REJECTED_SYSTEM_ERROR", "ACCEPTED_MSG_SEND_NEXT_ENTRY" ]
                        },
                        "description" : {
                          "type" : "string",
                          "description" : "Description of the message status\n",
                          "example" : "Message accepted and sent to next entry"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      } ]
    },
    "SuccessResponse" : {
      "type" : "object",
      "required" : [ "status", "data" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "success"
        },
        "data" : {
          "type" : "object"
        }
      }
    },
    "Error" : {
      "type" : "object",
      "required" : [ "status", "message" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "default" : "error",
          "example" : "error"
        },
        "message" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "data" : {
          "type" : "object"
        }
      }
    },
    "ValidationError" : {
      "type" : "object",
      "required" : [ "status", "code", "data" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "default" : "fail",
          "example" : "fail"
        },
        "code" : {
          "type" : "string"
        },
        "data" : {
          "type" : "object"
        }
      }
    }
  },
  "responses" : {
    "Standard500ErrorResponse" : {
      "description" : "Unable to process request due to an error",
      "schema" : {
        "$ref" : "#/definitions/Error"
      }
    },
    "Standard400ValidationErrorResponse" : {
      "description" : "One or more of the query parameters failed validation or was not provided. The request should not be attempted until the parameters are changed. The fields that failed validation will be detailed where possible.",
      "schema" : {
        "$ref" : "#/definitions/ValidationError"
      }
    },
    "SendSmsSuccessResponse" : {
      "description" : "Campaign created successfully",
      "schema" : {
        "$ref" : "#/definitions/SendSmsSuccess"
      }
    },
    "GetBalanceSuccessResponse" : {
      "description" : "Balance retrieved successfully",
      "schema" : {
        "$ref" : "#/definitions/GetBalanceSuccess"
      }
    }
  }
}